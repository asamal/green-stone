version: "3.8"
services:
  jaeger:
    image: "jaegertracing/all-in-one:latest"
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    networks:
      - jaeger-example
  core:
    build:
      dockerfile: docker/Dockerfile
      context: ../modules/core
    ports:
      - "44402:8080"
    environment:
      - JAEGER_UDP_HOST=jaeger
      - JAEGER_SAMPLER_MANAGER_HOST_PORT=jaeger:5778
    networks:
      - jaeger-example
    depends_on:
      - jaeger
  gateway:
    build:
      dockerfile: docker/Dockerfile
      context: ../modules/gateway
    ports:
      - "44401:8080"
    environment:
      - JAEGER_UDP_HOST=jaeger
      - JAEGER_SAMPLER_MANAGER_HOST_PORT=jaeger:5778
      - CORE_URL_HOST=core
    networks:
      - jaeger-example
    depends_on:
      - jaeger
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ../prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    networks:
      - jaeger-example
  graphana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - jaeger-example
networks:
  jaeger-example:
volumes:
  prometheus-data: { }
  grafana-data: { }
